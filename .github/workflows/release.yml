name: Auto Release on Push

on:
  push:
    branches:
      - 1.20.1

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 确保 gradlew 可执行
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 3. 提取版本号
      - name: Extract version from mods.toml
        id: extract_version
        run: |
          version=$(grep -E "^version=" src/main/resources/META-INF/mods.toml | cut -d'"' -f2)
          echo "Extracted version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      # 4. 创建 Tag
      - name: Create Tag
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/QingMo-A/EconoeySystem.git "v${{ env.VERSION }}"

      # 5. 等待 Tag 同步
      - name: Wait for Tag Synchronization
        run: sleep 10

      # 6. 构建项目
      - name: Build Project
        run: ./gradlew build

      # 7. 验证构建文件存在
      - name: Verify Build Artifacts
        run: |
          if [ -z "$(ls -A build/libs/*.jar 2>/dev/null)" ]; then
            echo "Build artifacts not found! Exiting."
            exit 1
          fi

      # 8. 创建 GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          body: ${{ github.event.head_commit.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 9. 上传构建文件到 Release
      - name: Upload Artifact to Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          tag_name: v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
